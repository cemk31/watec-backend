import { PrismaService } from "src/prisma/prisma.service";
import { CreateAuftragDTO } from "./dto/create-auftrag.dto";
import { Auftrag, Auftraggeber, AuftragsBestaetigung, Email, Objekt, Vw } from "@prisma/client";
import { CreateEmailDto } from "./dto/create-email.dto";
import { CreateObjektDto } from "./dto/create-objekt.dto";
import { UpdateObjektDto } from "./dto/update-objekt.dto";
import { CreateVwDto } from "./dto/create-vw.dto";
import { UpdateVwDto } from "./dto/update-vw.dto";
import { CreateAuftragsBestaetigungDto } from "./dto/create-auftragsbestatigung.dto";
import { UpdateAuftragsBestaetigungDto } from "./dto/update-auftragsbestatigung.dto";
export declare class AuftragService {
    private prisma;
    constructor(prisma: PrismaService);
    getAllAuftraege(): Promise<Auftrag[]>;
    getSingleAuftrag(auftragId: number): Promise<Auftrag>;
    createAuftrag(dto: CreateAuftragDTO): Promise<void>;
    deleteAuftrag(auftragId: number): Promise<void>;
    createEmail(data: CreateEmailDto): Promise<Email>;
    getEmailById(id: number): Promise<Email | null>;
    getAllEmails(): Promise<Email[]>;
    createObjekt(data: CreateObjektDto): Promise<Objekt>;
    getObjektById(id: number): Promise<Objekt | null>;
    getAllObjekte(): Promise<Objekt[]>;
    updateObjekt(id: number, data: UpdateObjektDto): Promise<Objekt>;
    deleteObjekt(id: number): Promise<Objekt>;
    createVw(data: CreateVwDto): Promise<Vw>;
    getVwById(id: number): Promise<Vw | null>;
    getAllVws(): Promise<Vw[]>;
    updateVw(id: number, data: UpdateVwDto): Promise<Vw>;
    deleteVw(id: number): Promise<Vw>;
    createAuftragsBestaetigung(data: CreateAuftragsBestaetigungDto): Promise<AuftragsBestaetigung>;
    getAuftragsBestaetigungById(id: number): Promise<AuftragsBestaetigung | null>;
    getAllAuftragsBestaetigungen(): Promise<AuftragsBestaetigung[]>;
    updateAuftragsBestaetigung(id: number, data: UpdateAuftragsBestaetigungDto): Promise<AuftragsBestaetigung>;
    deleteAuftragsBestaetigung(id: number): Promise<AuftragsBestaetigung>;
    getAuftraggeberById(id: number): Promise<Auftraggeber | null>;
    getAllAuftraggeber(): Promise<Auftraggeber[]>;
    deleteAuftraggeber(id: number): Promise<Auftraggeber>;
}
