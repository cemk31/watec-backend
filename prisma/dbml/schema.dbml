//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table users {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  email String [unique, not null]
  hash String [not null]
  firstName String
  lastName String
  isConfirmed Boolean [not null, default: false]
  confirmationToken String [unique]
  customer Customer [not null]
  auftraege auftraege [not null]
  auftraggeber auftraggeber [not null]
  bookmarks bookmarks [not null]
}

Table bookmarks {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  description String
  link String [not null]
  userId Int [not null]
  user users [not null]
}

Table Customer {
  id Int [pk, increment]
  firstName String
  lastName String
  addressId Int
  address Address
  phoneNumber String
  street String
  zipCode String
  email String
  country String
  place String
  companyName String
  fax String
  propertyNumber String
  userId Int
  user users
  orders Order [not null]
  objekt objekt [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table auftraege {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user users [not null]
  done Boolean
  emailEingang DateTime
  bemerkung String
  vorgemerkt String
  hmName String
  hmTel String
  mail String
  emailId Int [unique]
  email email
  objektId Int [unique]
  objekt objekt
  auftraggeberId Int
  auftraggeber auftraggeber
  vwStatischId Int
  vwStatisch vw
  vwDynamischId Int
  vwDynamisch vw
  auftragsBestaetigung auftragsbestaetigung
}

Table email {
  id Int [pk, increment]
  emailBetreff String
  emailAnhang String
  bestatigungVersendet Boolean
  anfrageThema String
  anfrageBestatigt Boolean
  angebotErstellt Boolean
  angebotsnummer String
  angebot String
  auftrag auftraege
}

Table objekt {
  id Int [pk, increment]
  liNr String
  adresseLi String
  plzLi String
  ortLi String
  auftrag auftraege
  customerId Int
  customer Customer
}

Table vw {
  id Int [pk, increment]
  vwBuro String
  vwMa String
  mailadresseVw String
  telVw String
  auftraegeStatisch auftraege [not null]
  auftraegeDynamisch auftraege [not null]
}

Table auftragsbestaetigung {
  id Int [pk, increment]
  auftragbestatigung Boolean
  vwBestatigung String
  terminiertZum DateTime
  uhrzeit DateTime
  aushang Boolean
  datumAushang DateTime
  agInformiert Boolean
  bgb Boolean
  bgbBericht Boolean
  ssa Boolean
  bericht Boolean
  umb Boolean
  ber Boolean
  reNr String
  reBetrag Decimal
  reErhalten Boolean
  reNr2 String
  reBetrag2 Decimal
  reNr2Erhalten Boolean
  dateien String
  mahnung Boolean
  mahnung1 Boolean
  mahnungErhaten Boolean
  auftragId Int [unique]
  auftrag auftraege
}

Table auftraggeber {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int
  user users
  ap String
  email String
  ort String
  plz Int
  strasse String
  tel String
  auftraggebername String
  auftraege auftraege [not null]
}

Table Order {
  id Int [pk, increment]
  number String
  remarkExternal String
  createdAt DateTime [default: `now()`, not null]
  actualStatus Status [not null, default: 'RECEIVED']
  customerId Int [not null]
  Customer Customer [not null]
  Cancelled Cancelled [not null]
  ClosedContractPartner ClosedContractPartner [not null]
  CustomerContacts CustomerContact [not null]
  NotPossible NotPossible [not null]
  status OrderStatus [not null]
  Planned Planned [not null]
  Postponed Postponed [not null]
  Received Received [not null]
  Rejected Rejected [not null]
  updatedAt DateTime
}

Table OrderStatus {
  id Int [pk, increment]
  type String
  setOn DateTime [default: `now()`]
  executionOnSiteDone Boolean
  orderId Int [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  order Order [not null]
}

Table CustomerContact {
  id Int [pk, increment]
  contactAttemptOn DateTime
  contactPersonCustomer String
  agentCP String
  result String
  remark String
  orderId Int
  order Order
  plannedId Int
  planned Planned
  receivedId Int
  received Received
  statusReportId Int
  statusReport StatusReport
  ClosedContractPartner ClosedContractPartner [not null]
}

Table ReportOrderStatusRequest {
  id Int [pk, increment]
  environment String [not null]
  language String [not null]
  consumer String [not null]
  closedContractPartnerId Int
  closedContractPartner ClosedContractPartner
}

Table ClosedContractPartner {
  id Int [pk, increment]
  orderstatusType Int
  setOn DateTime [default: `now()`]
  deficiencyDescription String
  registrationHealthAuthoritiesOn DateTime [default: `now()`]
  extraordinaryExpenditureReason String
  orderId Int
  order Order
  Contact Contact [not null]
  recordedSystem RecordedSystem [not null]
  ReportOrderStatusRequest ReportOrderStatusRequest [not null]
  suppliedDocuments SuppliedDocuments [not null]
  CustomerContact CustomerContact [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table SuppliedDocuments {
  id Int [pk, increment]
  closedContractPartnerId Int
  ClosedContractPartner ClosedContractPartner
  documentId Int
  document Document
}

Table Document {
  id Int [pk, increment]
  type String [not null]
  content String [not null]
  SuppliedDocuments SuppliedDocuments [not null]
}

Table RecordedSystem {
  id Int [pk, increment]
  closedContractPartnerId Int [increment, unique]
  ClosedContractPartner ClosedContractPartner
  drinkingWaterFacility DrinkingWaterFacility [not null]
  property Property
  services Service [not null]
}

Table Property {
  id Int [pk, increment]
  hotwatersupplyType_central Boolean [not null]
  hotwatersupplyType_decentral Boolean [not null]
  recordedSystemId Int [unique]
  recordedSystem RecordedSystem
}

Table Service {
  id Int [pk, increment]
  articleNumber_ista Int [not null]
  quantity Int [not null]
  unit String [not null]
  extraordinaryExpenditure Boolean [not null]
  purchasePrice_ista Float
  warranty Boolean
  addressId Int [not null]
  recordedSystemId Int
  serviceRenderedIn Address [not null]
  RecordedSystem RecordedSystem
}

Table DrinkingWaterFacility {
  id Int [pk, increment]
  consecutiveNumber Int
  usageType String
  usageTypeOthers String
  numberSuppliedUnits Int
  numberDrinkingWaterHeater Int
  totalVolumeLitres Int
  pipingSystemType_Circulation Boolean
  pipingSystemType_Waterbranchline Boolean
  pipingSystemType_Pipetraceheater Boolean
  pipingVolumeGr3Litres Boolean
  deadPipeKnown Boolean
  deadPipesPosition String
  numberAscendingPipes Int
  aerosolformation Boolean
  explanation String
  numberSuppliedPersons Int
  pipeworkSchematicsAvailable Boolean
  numberColdWaterLegs Int
  numberHotWaterLegs Int
  temperatureCirculationDWH_A Int
  temperatureCirculationDWH_B Int
  heatExchangerSystem_central Boolean
  heatExchangerSystem_districtheating Boolean
  heatExchangerSystem_continuousflowprinciple Boolean
  ascendingPipes AscendingPipe [not null]
  drinkingWaterHeaters DrinkingWaterHeater [not null]
  recordedSystemId Int [unique]
  RecordedSystem RecordedSystem
  samplingPoints SamplingPoint [not null]
}

Table DrinkingWaterHeater {
  id Int [pk, increment]
  consecutiveNumber Int
  inletTemperatureDisplayPresent Boolean
  inletTemperature Int
  outletTemperatureDisplayPresent Boolean
  outletTemperature Int
  pipeDiameterOutlet String
  pipeMaterialtypeOutlet String
  volumeLitre Int
  roomType String
  roomPosition Int
  positionDetail String
  drinkingWaterFacilityId Int
  DrinkingWaterFacility DrinkingWaterFacility
  unitId Int
  unit Unit
}

Table AscendingPipe {
  id Int [pk, increment]
  consecutiveNumber Int
  ascendingPipeTemperatureDisplayPresent Boolean
  flowTemperature Int
  circulationTemperatureDisplayPresent Boolean
  circulationTemperature Int
  pipeDiameter String
  pipeMaterialtype String
  drinkingWaterFacilityId Int [not null]
  DrinkingWaterFacility DrinkingWaterFacility [not null]
}

Table SamplingPoints {
  id Int [pk, increment]
  samplingPoint SamplingPoint [not null]
}

Table SamplingPoint {
  id Int [pk, increment]
  consecutiveNumber Int [not null]
  installationNumber Int
  numberObjectInstallationLocation Int
  pipingSystemType String
  remoteSamplingPoint Boolean
  roomType String
  roomPosition Int
  positionDetail String
  unitId Int [not null]
  drinkingWaterFacilityId Int [not null]
  samplingPointsId Int
  DrinkingWaterFacility DrinkingWaterFacility [not null]
  SamplingPoints SamplingPoints
  unit Unit [not null]
}

Table Unit {
  id Int [pk, increment]
  floor Int
  storey String
  position Int
  userName String
  generalUnit Boolean
  buildingId Int [not null]
  DrinkingWaterHeater DrinkingWaterHeater [not null]
  SamplingPoint SamplingPoint [not null]
  building Building [not null]
}

Table Building {
  id Int [pk, increment]
  addressId Int [not null]
  address Address [not null]
  Unit Unit [not null]
}

Table Address {
  id Int [pk, increment]
  street String [not null]
  streetnumber String
  houseNumber String
  postcode String
  city String
  country String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  customerId Int [unique]
  customer Customer
  building Building [not null]
  Service Service [not null]
}

Table Envelope {
  id Int [pk, increment]
  headerId Int [unique, not null]
  bodyId Int [unique, not null]
  Body Body [not null]
  Header Header [not null]
}

Table Header {
  id Int [pk, increment]
  Envelope Envelope
}

Table Body {
  id Int [pk, increment]
  requestId Int [unique, not null]
  Request Request [not null]
  Envelope Envelope
}

Table Request {
  id Int [pk, increment]
  environment String [not null]
  language String [not null]
  consumer String [not null]
  Body Body
  cancelledId Int
  Cancelled Cancelled
  notPossibleId Int
  NotPossible NotPossible
  plannedId Int
  Planned Planned
  postponedId Int
  Postponed Postponed
  receivedId Int
  Received Received
  rejectedId Int
  Rejected Rejected
}

Table Postponed {
  id Int [pk, increment]
  statusType String [not null]
  setOn DateTime [default: `now()`]
  nextContactAttemptOn DateTime [not null]
  postponedReason String [not null]
  Contact Contact [not null]
  orderId Int [not null]
  Order Order [not null]
  requestId Int [unique]
  Request Request
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Rejected {
  id Int [pk, increment]
  statusType Int
  setOn DateTime [default: `now()`]
  reason String
  reasonText String
  Contact Contact [not null]
  requestId Int [unique]
  Request Request
  orderId Int [not null]
  Order Order [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table NotPossible {
  id Int [pk, increment]
  statusType String
  setOn DateTime [default: `now()`]
  Contact Contact [not null]
  orderId Int [not null]
  Order Order [not null]
  requestId Int [unique]
  Request Request
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Contact {
  id Int [pk, increment]
  contactAttemptOn DateTime [not null]
  contactPerson String
  agentCP String
  result String
  remark String
  cancelledId Int
  Cancelled Cancelled
  closedContractPartnerId Int
  ClosedContractPartner ClosedContractPartner
  notPossibleId Int
  NotPossible NotPossible
  postponedId Int
  Postponed Postponed
  rejectedId Int
  Rejected Rejected
  receivedId Int
  Received Received
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Cancelled {
  id Int [pk, increment]
  statusType String
  setOn DateTime [default: `now()`]
  cancellationReason String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  orderId Int [not null]
  Order Order [not null]
  requestId Int [unique]
  Request Request
  Contact Contact [not null]
}

Table Planned {
  id Int [pk, increment]
  orderId Int [not null]
  orderstatusType String
  setOn DateTime [default: `now()`]
  detailedScheduleDate DateTime
  detailedScheduleTimeFrom DateTime
  detailedScheduleTimeTo DateTime
  detailedScheduleDelayReason String
  requestId Int [unique]
  Request Request
  CustomerContact CustomerContact [not null]
  Order Order [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
}

Table Received {
  id Int [pk, increment]
  orderId Int [not null]
  orderstatusType String [not null]
  setOn DateTime [default: `now()`]
  requestId Int [unique]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  CustomerContact CustomerContact [not null]
  Contact Contact [not null]
  Order Order [not null]
  Request Request
}

Table StatusReport {
  id Int [pk, increment]
  orderNo String [not null]
  currentDatetime DateTime [not null]
  customerContacts CustomerContact [not null]
}

Enum Auftragsstatus {
  Eingegangen
  Kundenkontakt_nicht_moeglich
  Kundenkontakt_verschoben
  Geplant
  Ausfuehrung_vor_Ort_erfolgt
  Ausfuehrung_vor_Ort_nicht_moeglich
  Abgeschlossen_Vertragspartner
  Abgelehnt
  Storniert
}

Enum Status {
  RECEIVED
  PLANNED
  NOTPOSSIBLE
  POSTPONED
  REJECTED
  CLOSED
  CANCELLED
  DONE
  CLOSEDCONTRACTPARTNER
}

Ref: bookmarks.userId > users.id

Ref: Customer.userId > users.id

Ref: auftraege.userId > users.id

Ref: auftraege.emailId - email.id

Ref: auftraege.objektId - objekt.id

Ref: auftraege.auftraggeberId > auftraggeber.id

Ref: auftraege.vwStatischId > vw.id

Ref: auftraege.vwDynamischId > vw.id

Ref: objekt.customerId > Customer.id

Ref: auftragsbestaetigung.auftragId - auftraege.id

Ref: auftraggeber.userId > users.id

Ref: Order.customerId > Customer.id

Ref: OrderStatus.orderId > Order.id

Ref: CustomerContact.orderId > Order.id

Ref: CustomerContact.plannedId > Planned.id

Ref: CustomerContact.receivedId > Received.id

Ref: CustomerContact.statusReportId > StatusReport.id

Ref: ReportOrderStatusRequest.closedContractPartnerId > ClosedContractPartner.id

Ref: ClosedContractPartner.orderId > Order.id

Ref: SuppliedDocuments.closedContractPartnerId > ClosedContractPartner.id

Ref: SuppliedDocuments.documentId > Document.id

Ref: RecordedSystem.closedContractPartnerId > ClosedContractPartner.id

Ref: Property.recordedSystemId - RecordedSystem.id

Ref: Service.addressId > Address.id

Ref: Service.recordedSystemId > RecordedSystem.id

Ref: DrinkingWaterFacility.recordedSystemId > RecordedSystem.id

Ref: DrinkingWaterHeater.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: DrinkingWaterHeater.unitId > Unit.id

Ref: AscendingPipe.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: SamplingPoint.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: SamplingPoint.samplingPointsId > SamplingPoints.id

Ref: SamplingPoint.unitId > Unit.id

Ref: Unit.buildingId > Building.id

Ref: Building.addressId > Address.id

Ref: Address.customerId - Customer.id

Ref: Envelope.bodyId - Body.id

Ref: Envelope.headerId - Header.id

Ref: Body.requestId - Request.id

Ref: Postponed.orderId > Order.id

Ref: Postponed.requestId - Request.id

Ref: Rejected.requestId - Request.id

Ref: Rejected.orderId > Order.id

Ref: NotPossible.orderId > Order.id

Ref: NotPossible.requestId - Request.id

Ref: Contact.cancelledId > Cancelled.id

Ref: Contact.closedContractPartnerId > ClosedContractPartner.id

Ref: Contact.notPossibleId > NotPossible.id

Ref: Contact.postponedId > Postponed.id

Ref: Contact.rejectedId > Rejected.id

Ref: Contact.receivedId > Received.id

Ref: Cancelled.orderId > Order.id

Ref: Cancelled.requestId - Request.id

Ref: Planned.requestId - Request.id

Ref: Planned.orderId > Order.id

Ref: Received.orderId > Order.id

Ref: Received.requestId - Request.id