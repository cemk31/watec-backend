//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table users {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  email String [unique, not null]
  hash String [not null]
  firstName String
  lastName String
  confirmationToken String [unique]
  isConfirmed Boolean [not null, default: false]
  customer Customer [not null]
  sync Sync [not null]
  auftraege auftrag [not null]
  auftraggeber auftraggeber [not null]
  bookmarks bookmarks [not null]
}

Table bookmarks {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  description String
  link String [not null]
  userId Int [not null]
  user users [not null]
}

Table Customer {
  id Int [pk, increment]
  istaId Int
  firstName String
  lastName String
  name1 String
  name2 String
  city String
  postcode String
  country String
  telephone String
  phoneNumber String
  street String
  zipCode String
  userId Int
  email String
  createdAt DateTime [default: `now()`]
  place String
  updatedAt DateTime
  companyName String
  fax String
  propertyNumber Int
  addressId Int
  address Address
  user users
  orders Order [not null]
  objekt objekt [not null]
  contactPerson contactPerson
  contactPersonId Int [unique]
}

Table contactPerson {
  id Int [pk, increment]
  salutation String
  name String
  forename String
  telephone String
  telephoneMobile String
  role String
  Property Property [not null]
  customerId Int [unique]
  Customer Customer
}

Table auftrag {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  done Boolean
  emailEingang DateTime
  bemerkung String
  vorgemerkt String
  hmName String
  hmTel String
  userId Int [not null]
  auftraggeberId Int
  emailId Int [unique]
  objektId Int [unique]
  vwDynamischId Int
  vwStatischId Int
  mail String
  auftraggeber auftraggeber
  email email
  objekt objekt
  user users [not null]
  vwDynamisch vw
  vwStatisch vw
  auftragsBestaetigung auftragsbestaetigung
}

Table email {
  id Int [pk, increment]
  emailBetreff String
  emailAnhang String
  bestatigungVersendet Boolean
  anfrageThema String
  anfrageBestatigt Boolean
  angebotErstellt Boolean
  angebotsnummer String
  angebot String
  auftrag auftrag
}

Table objekt {
  id Int [pk, increment]
  liNr String
  adresseLi String
  plzLi String
  ortLi String
  customerId Int
  auftrag auftrag
  customer Customer
}

Table vw {
  id Int [pk, increment]
  vwBuro String
  vwMa String
  mailadresseVw String
  telVw String
  auftraegeDynamisch auftrag [not null]
  auftraegeStatisch auftrag [not null]
}

Table auftragsbestaetigung {
  id Int [pk, increment]
  auftragbestatigung Boolean
  vwBestatigung String
  terminiertZum DateTime
  uhrzeit DateTime
  aushang Boolean
  datumAushang DateTime
  agInformiert Boolean
  bgb Boolean
  bgbBericht Boolean
  ssa Boolean
  bericht Boolean
  umb Boolean
  ber Boolean
  reNr String
  reBetrag Decimal
  reErhalten Boolean
  reNr2 String
  reBetrag2 Decimal
  reNr2Erhalten Boolean
  dateien String
  mahnung Boolean
  mahnung1 Boolean
  mahnungErhaten Boolean
  auftragId Int [unique]
  auftrag auftrag
}

Table auftraggeber {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int
  ap String
  email String
  ort String
  plz Int
  strasse String
  tel String
  auftraggebername String
  auftraege auftrag [not null]
  user users
}

Table Order {
  id Int [pk, increment]
  propertyNumber BigInt
  orderNumberIsta BigInt
  number BigInt
  remarkExternal String
  createdAt DateTime [default: `now()`, not null]
  actualStatus Status [not null, default: 'RECEIVED']
  customerId Int [not null]
  updatedAt DateTime
  Cancelled Cancelled [not null]
  ClosedContractPartner ClosedContractPartner [not null]
  customerContacts CustomerContact [not null]
  ExecutionOnSiteNotPossible ExecutionOnSiteNotPossible [not null]
  NotPossible NotPossible [not null]
  Customer Customer [not null]
  status OrderStatus [not null]
  Planned Planned [not null]
  Postponed Postponed [not null]
  Received Received [not null]
  Rejected Rejected [not null]
  serviceType String
  executionFlag Boolean
  releasedOn DateTime
  drinkingWaterFacility DrinkingWaterFacility
  drinkingWaterFacilityId Int
  property Property
  propertyId Int
}

Table OrderStatus {
  id Int [pk, increment]
  type String
  setOn DateTime [default: `now()`]
  executionOnSiteDone Boolean
  orderId Int [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  order Order [not null]
}

Table CustomerContact {
  id Int [pk, increment]
  contactAttemptOn DateTime
  contactPersonCustomer String
  agentCP String
  result String
  remark String
  orderId Int
  plannedId Int
  receivedId Int
  statusReportId Int
  executionOnSiteNotPossibleId Int
  notPossibleId Int
  rejectedId Int
  postponedId Int
  cancelledId Int
  ExecutionOnSiteNotPossible ExecutionOnSiteNotPossible
  NotPossible NotPossible
  Cancelled Cancelled
  Postponed Postponed
  rejected Rejected
  order Order
  planned Planned
  received Received
  statusReport StatusReport
  ClosedContractPartner ClosedContractPartner [not null]
}

Table ReportOrderStatusRequest {
  id Int [pk, increment]
  environment String [not null]
  language String [not null]
  consumer String [not null]
  closedContractPartnerId Int
  closedContractPartner ClosedContractPartner
}

Table ClosedContractPartner {
  id Int [pk, increment]
  orderId Int
  orderstatusType Int
  setOn DateTime [default: `now()`]
  deficiencyDescription String
  registrationHealthAuthoritiesOn DateTime [default: `now()`]
  extraordinaryExpenditureReason String
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  syncDataId Int [unique]
  order Order
  Contact Contact [not null]
  recordedSystem RecordedSystem [not null]
  ReportOrderStatusRequest ReportOrderStatusRequest [not null]
  services Service [not null]
  suppliedDocuments SuppliedDocuments [not null]
  syncData Sync
  customerContacts CustomerContact [not null]
}

Table SuppliedDocuments {
  id Int [pk, increment]
  closedContractPartnerId Int
  documentId Int
  ClosedContractPartner ClosedContractPartner
  document Document
}

Table Document {
  id Int [pk, increment]
  type String [not null]
  content String [not null]
  SuppliedDocuments SuppliedDocuments [not null]
}

Table RecordedSystem {
  id Int [pk, increment]
  closedContractPartnerId Int [increment]
  drinkingWaterFacility DrinkingWaterFacility
  property Property
  ClosedContractPartner ClosedContractPartner
}

Table Property {
  id Int [pk, increment]
  number BigInt
  id_HealthAuthorities BigInt
  contactPersonId Int
  contactPerson contactPerson
  addressId Int
  address Address
  userAddresses UserAddress [not null]
  building Building [not null]
  hotwatersupplyType_central Boolean
  hotwatersupplyType_decentral Boolean
  recordedSystemId Int [unique]
  recordedSystem RecordedSystem
  Order Order [not null]
}

Table UserAddress {
  id Int [pk, increment]
  salutation String
  name String
  street String
  streetnumber Int
  postcode Int
  city String
  country String
  Property Property
  propertyId Int
}

Table Service {
  id Int [pk, increment]
  articleNumber_ista Int
  quantity Int
  unit String
  extraordinaryExpenditure Boolean
  purchasePrice_ista Float
  warranty Boolean
  addressId Int
  closedContractPartnerId Int
  serviceRenderedIn Address
  ClosedContractPartner ClosedContractPartner
}

Table DrinkingWaterFacility {
  id Int [pk, increment]
  consecutiveNumber Int
  usageType String
  usageTypeOthers String
  numberSuppliedUnits Int
  numberDrinkingWaterHeater Int
  totalVolumeLitres Int
  pipingSystemType_Circulation Boolean
  pipingSystemType_Waterbranchline Boolean
  pipingSystemType_Pipetraceheater Boolean
  pipingVolumeGr3Litres Boolean
  deadPipeKnown Boolean
  deadPipesPosition String
  numberAscendingPipes Int
  aerosolformation Boolean
  explanation String
  numberSuppliedPersons Int
  pipeworkSchematicsAvailable Boolean
  numberColdWaterLegs Int
  numberHotWaterLegs Int
  temperatureCirculationDWH_A Int
  temperatureCirculationDWH_B Int
  heatExchangerSystem_central Boolean
  heatExchangerSystem_districtheating Boolean
  heatExchangerSystem_continuousflowprinciple Boolean
  recordedSystemId Int [unique]
  ascendingPipes AscendingPipe [not null]
  RecordedSystem RecordedSystem
  drinkingWaterHeaters DrinkingWaterHeater [not null]
  samplingPoints SamplingPoint [not null]
  Order Order [not null]
}

Table DrinkingWaterHeater {
  id Int [pk, increment]
  consecutiveNumber Int
  inletTemperatureDisplayPresent Boolean
  inletTemperature Int
  outletTemperatureDisplayPresent Boolean
  outletTemperature Int
  pipeDiameterOutlet String
  pipeMaterialtypeOutlet String
  volumeLitre Int
  roomType String
  roomPosition Int
  positionDetail String
  drinkingWaterFacilityId Int
  DrinkingWaterFacility DrinkingWaterFacility
  unit Unit
}

Table Unit {
  id Int [pk, increment]
  floor Int
  storey String
  position Int
  userName String
  generalUnit Boolean
  drinkingWaterHeaterId Int [unique]
  DrinkingWaterHeater DrinkingWaterHeater
  SamplingPoint SamplingPoint [not null]
  buildingId Int [not null]
  building Building [not null]
}

Table AscendingPipe {
  id Int [pk, increment]
  consecutiveNumber Int
  ascendingPipeTemperatureDisplayPresent Boolean
  flowTemperature Int
  circulationTemperatureDisplayPresent Boolean
  circulationTemperature Int
  pipeDiameter String
  pipeMaterialtype String
  drinkingWaterFacilityId Int [not null]
  DrinkingWaterFacility DrinkingWaterFacility [not null]
}

Table SamplingPoints {
  id Int [pk, increment]
  samplingPoint SamplingPoint [not null]
}

Table SamplingPoint {
  id Int [pk, increment]
  consecutiveNumber Int
  installationNumber Int
  numberObjectInstallationLocation Int
  pipingSystemType String
  remoteSamplingPoint Boolean
  roomType String
  roomPosition Int
  positionDetail String
  unitId Int [not null]
  drinkingWaterFacilityId Int [not null]
  samplingPointsId Int
  id_healthAuthorities Int
  DrinkingWaterFacility DrinkingWaterFacility [not null]
  SamplingPoints SamplingPoints
  unit Unit [not null]
}

Table Building {
  id Int [pk, increment]
  addressId Int [not null]
  address Address [not null]
  Unit Unit [not null]
  street String
  streetnumber String
  postcode String
  city String
  country String
  Property Property
  propertyId Int
}

Table Address {
  id Int [pk, increment]
  street String
  streetnumber String
  postcode String
  city String
  country String
  createdAt DateTime [default: `now()`, not null]
  customerId Int [unique]
  updatedAt DateTime [not null]
  houseNumber String
  customer Customer
  building Building [not null]
  Service Service [not null]
  Property Property [not null]
}

Table Envelope {
  id Int [pk, increment]
  headerId Int [unique, not null]
  bodyId Int [unique, not null]
  Body Body [not null]
  Header Header [not null]
}

Table Header {
  id Int [pk, increment]
  Envelope Envelope
}

Table Body {
  id Int [pk, increment]
  requestId Int [unique, not null]
  Request Request [not null]
  Envelope Envelope
}

Table Request {
  id Int [pk, increment]
  environment String [not null]
  language String [not null]
  consumer String [not null]
  rejectedId Int
  notPossibleId Int
  postponedId Int
  cancelledId Int
  plannedId Int
  ExecutionOnSiteNotPossibleId Int
  receivedId Int
  Body Body
  Cancelled Cancelled
  NotPossible NotPossible
  Planned Planned
  ExecutionOnSiteNotPossible ExecutionOnSiteNotPossible
  Postponed Postponed
  Received Received
  Rejected Rejected
}

Table Postponed {
  id Int [pk, increment]
  requestId Int [unique]
  orderId Int [not null]
  statusType String [not null]
  setOn DateTime [default: `now()`]
  nextContactAttemptOn DateTime [not null]
  postponedReason String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  syncDataId Int [unique]
  Contact Contact [not null]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  syncData Sync
}

Table Rejected {
  id Int [pk, increment]
  requestId Int [unique]
  orderId Int [not null]
  statusType Int
  setOn DateTime [default: `now()`]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  rejectionReason String
  rejectionReasonText String
  syncDataId Int [unique]
  Contact Contact [not null]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  syncData Sync
}

Table NotPossible {
  id Int [pk, increment]
  requestId Int [unique]
  orderId Int [not null]
  statusType String
  setOn DateTime [default: `now()`]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  syncDataId Int [unique]
  Contact Contact [not null]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  syncData Sync
}

Table Contact {
  id Int [pk, increment]
  contactAttemptOn DateTime [not null]
  contactPerson String
  agentCP String
  result String
  remark String
  notPossibleId Int
  rejectedId Int
  postponedId Int
  cancelledId Int
  closedContractPartnerId Int
  createdAt DateTime [default: `now()`]
  receivedId Int
  updatedAt DateTime
  Cancelled Cancelled
  ClosedContractPartner ClosedContractPartner
  NotPossible NotPossible
  Postponed Postponed
  Received Received
  Rejected Rejected
}

Table Cancelled {
  id Int [pk, increment]
  requestId Int [unique]
  orderId Int [not null]
  statusType String
  setOn DateTime [default: `now()`]
  cancellationReason String [not null]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  syncDataId Int [unique]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  Contact Contact [not null]
  syncData Sync
}

Table Planned {
  id Int [pk, increment]
  orderId Int [not null]
  orderstatusType String
  setOn DateTime [default: `now()`]
  detailedScheduleDate DateTime
  detailedScheduleTimeFrom String
  detailedScheduleTimeTo String
  detailedScheduleDelayReason String
  requestId Int [unique]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  syncDataId Int [unique]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  syncData Sync
}

Table Received {
  id Int [pk, increment]
  orderId Int [not null]
  orderstatusType String [not null, default: '007']
  setOn DateTime [default: `now()`]
  requestId Int [unique]
  createdAt DateTime [default: `now()`]
  updatedAt DateTime
  syncDataId Int [unique]
  Contact Contact [not null]
  customerContacts CustomerContact [not null]
  Order Order [not null]
  Request Request
  syncData Sync
}

Table ExecutionOnSiteNotPossible {
  id Int [pk, increment]
  orderstatusType String [not null, default: '003']
  setOn DateTime [default: `now()`]
  requestId Int [unique]
  updatedAt DateTime
  orderId Int [not null]
  syncDataId Int [unique]
  nonExecutionReason String
  customerContacts CustomerContact [not null]
  Order Order [not null]
  request Request
  syncData Sync
}

Table StatusReport {
  id Int [pk, increment]
  orderNo String [not null]
  currentDatetime DateTime [not null]
  customerContacts CustomerContact [not null]
}

Table Sync {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  lastSyncTime DateTime [default: `now()`, not null]
  statusType Status [not null]
  syncStatus String [not null]
  syncError String
  userEmail String
  userId Int [not null]
  receivedId Int [unique]
  plannedId Int [unique]
  postponedId Int [unique]
  rejectedId Int [unique]
  cancelledId Int [unique]
  notPossibleId Int [unique]
  closedContractPartnerId Int [unique]
  executionOnSiteNotPossibleId Int [unique]
  Cancelled Cancelled
  ClosedContractPartner ClosedContractPartner
  ExecutionOnSiteNotPossible ExecutionOnSiteNotPossible
  NotPossible NotPossible
  Planned Planned
  Postponed Postponed
  Received Received
  Rejected Rejected
  user users [not null]
}

Enum Auftragsstatus {
  Eingegangen
  Kundenkontakt_nicht_moeglich
  Kundenkontakt_verschoben
  Geplant
  Ausfuehrung_vor_Ort_erfolgt
  Ausfuehrung_vor_Ort_nicht_moeglich
  Abgeschlossen_Vertragspartner
  Abgelehnt
  Storniert
}

Enum Status {
  RECEIVED
  PLANNED
  NOTPOSSIBLE
  POSTPONED
  REJECTED
  CLOSED
  CANCELLED
  DONE
  CLOSEDCONTRACTPARTNER
  EXECUTIONONSITENOTPOSSIBLE
}

Ref: bookmarks.userId > users.id

Ref: Customer.userId > users.id

Ref: Customer.contactPersonId - contactPerson.id

Ref: auftrag.auftraggeberId > auftraggeber.id

Ref: auftrag.emailId - email.id

Ref: auftrag.objektId - objekt.id

Ref: auftrag.userId > users.id

Ref: auftrag.vwDynamischId > vw.id

Ref: auftrag.vwStatischId > vw.id

Ref: objekt.customerId > Customer.id

Ref: auftragsbestaetigung.auftragId - auftrag.id

Ref: auftraggeber.userId > users.id

Ref: Order.customerId > Customer.id

Ref: Order.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: Order.propertyId > Property.id

Ref: OrderStatus.orderId > Order.id

Ref: CustomerContact.executionOnSiteNotPossibleId > ExecutionOnSiteNotPossible.id

Ref: CustomerContact.notPossibleId > NotPossible.id

Ref: CustomerContact.cancelledId > Cancelled.id

Ref: CustomerContact.postponedId > Postponed.id

Ref: CustomerContact.rejectedId > Rejected.id

Ref: CustomerContact.orderId > Order.id

Ref: CustomerContact.plannedId > Planned.id

Ref: CustomerContact.receivedId > Received.id

Ref: CustomerContact.statusReportId > StatusReport.id

Ref: ReportOrderStatusRequest.closedContractPartnerId > ClosedContractPartner.id

Ref: ClosedContractPartner.orderId > Order.id

Ref: SuppliedDocuments.closedContractPartnerId > ClosedContractPartner.id

Ref: SuppliedDocuments.documentId > Document.id

Ref: RecordedSystem.closedContractPartnerId > ClosedContractPartner.id

Ref: Property.contactPersonId > contactPerson.id

Ref: Property.addressId > Address.id

Ref: Property.recordedSystemId - RecordedSystem.id

Ref: UserAddress.propertyId > Property.id

Ref: Service.addressId > Address.id

Ref: Service.closedContractPartnerId > ClosedContractPartner.id

Ref: DrinkingWaterFacility.recordedSystemId - RecordedSystem.id

Ref: DrinkingWaterHeater.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: Unit.drinkingWaterHeaterId - DrinkingWaterHeater.id

Ref: Unit.buildingId > Building.id

Ref: AscendingPipe.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: SamplingPoint.drinkingWaterFacilityId > DrinkingWaterFacility.id

Ref: SamplingPoint.samplingPointsId > SamplingPoints.id

Ref: SamplingPoint.unitId > Unit.id

Ref: Building.addressId > Address.id

Ref: Building.propertyId > Property.id

Ref: Address.customerId - Customer.id

Ref: Envelope.bodyId - Body.id

Ref: Envelope.headerId - Header.id

Ref: Body.requestId - Request.id

Ref: Postponed.orderId > Order.id

Ref: Postponed.requestId - Request.id

Ref: Rejected.orderId > Order.id

Ref: Rejected.requestId - Request.id

Ref: NotPossible.orderId > Order.id

Ref: NotPossible.requestId - Request.id

Ref: Contact.cancelledId > Cancelled.id

Ref: Contact.closedContractPartnerId > ClosedContractPartner.id

Ref: Contact.notPossibleId > NotPossible.id

Ref: Contact.postponedId > Postponed.id

Ref: Contact.receivedId > Received.id

Ref: Contact.rejectedId > Rejected.id

Ref: Cancelled.orderId > Order.id

Ref: Cancelled.requestId - Request.id

Ref: Planned.orderId > Order.id

Ref: Planned.requestId - Request.id

Ref: Received.orderId > Order.id

Ref: Received.requestId - Request.id

Ref: ExecutionOnSiteNotPossible.orderId > Order.id

Ref: ExecutionOnSiteNotPossible.requestId - Request.id

Ref: Sync.cancelledId - Cancelled.id

Ref: Sync.closedContractPartnerId - ClosedContractPartner.id

Ref: Sync.executionOnSiteNotPossibleId - ExecutionOnSiteNotPossible.id

Ref: Sync.notPossibleId - NotPossible.id

Ref: Sync.plannedId - Planned.id

Ref: Sync.postponedId - Postponed.id

Ref: Sync.receivedId - Received.id

Ref: Sync.rejectedId - Rejected.id

Ref: Sync.userId > users.id